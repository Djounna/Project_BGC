// <auto-generated />
using System;
using BGC_DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BGCDataAccess.Migrations
{
    [DbContext(typeof(BGCContext))]
    partial class BGCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BGC_DataAccess.Entities.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxNumberPlayers")
                        .HasColumnType("int");

                    b.Property<int?>("MinNumberPlayers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.GameSession", b =>
                {
                    b.Property<int>("GameSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameSessionId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Length")
                        .HasColumnType("int");

                    b.Property<int?>("MaxNumberPlayers")
                        .HasColumnType("int");

                    b.Property<int?>("MinNumberPlayers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizerMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Schedule")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TableGameTableId")
                        .HasColumnType("int");

                    b.HasKey("GameSessionId");

                    b.HasIndex("OrganizerMemberId");

                    b.HasIndex("TableGameTableId");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.GameSessionGame", b =>
                {
                    b.Property<int>("GameSessionGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameSessionGameId"));

                    b.Property<int>("GameSessionId")
                        .HasColumnType("int");

                    b.Property<int>("GameVersionId")
                        .HasColumnType("int");

                    b.HasKey("GameSessionGameId");

                    b.HasIndex("GameSessionId");

                    b.HasIndex("GameVersionId");

                    b.ToTable("GameSessionGames");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.GameSessionRegistration", b =>
                {
                    b.Property<int>("GameSessionRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameSessionRegistrationId"));

                    b.Property<int>("GameSessionId")
                        .HasColumnType("int");

                    b.Property<int>("playerMemberId")
                        .HasColumnType("int");

                    b.HasKey("GameSessionRegistrationId");

                    b.HasIndex("GameSessionId");

                    b.HasIndex("playerMemberId");

                    b.ToTable("GameSessionRegistrations");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.GameTable", b =>
                {
                    b.Property<int>("GameTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameTableId"));

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("GameTableId");

                    b.ToTable("GameTables");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.GameVersion", b =>
                {
                    b.Property<int>("GameVersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameVersionId"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.HasKey("GameVersionId");

                    b.HasIndex("GameId");

                    b.ToTable("GameVersions");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.RpgCampaign", b =>
                {
                    b.Property<int>("RpgCampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RpgCampaignId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizerMemberId")
                        .HasColumnType("int");

                    b.HasKey("RpgCampaignId");

                    b.HasIndex("OrganizerMemberId");

                    b.ToTable("RpgCampaigns");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.RpgCampaignRegistration", b =>
                {
                    b.Property<int>("RpgCampaignRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RpgCampaignRegistrationId"));

                    b.Property<int>("CampaignRpgCampaignId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerMemberId")
                        .HasColumnType("int");

                    b.HasKey("RpgCampaignRegistrationId");

                    b.HasIndex("CampaignRpgCampaignId");

                    b.HasIndex("PlayerMemberId");

                    b.ToTable("RpgCampaignRegistrations");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.RpgSession", b =>
                {
                    b.Property<int>("RpgSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RpgSessionId"));

                    b.Property<int>("CampaignRpgCampaignId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Schedule")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TableGameTableId")
                        .HasColumnType("int");

                    b.HasKey("RpgSessionId");

                    b.HasIndex("CampaignRpgCampaignId");

                    b.HasIndex("TableGameTableId");

                    b.ToTable("RpgSessions");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.RpgSessionGame", b =>
                {
                    b.Property<int>("RpgSessionGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RpgSessionGameId"));

                    b.Property<int>("GameVersionId")
                        .HasColumnType("int");

                    b.Property<int>("RpgSessionId")
                        .HasColumnType("int");

                    b.HasKey("RpgSessionGameId");

                    b.HasIndex("GameVersionId");

                    b.HasIndex("RpgSessionId");

                    b.ToTable("RpgSessionGames");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.GameSession", b =>
                {
                    b.HasOne("BGC_DataAccess.Entities.Member", "Organizer")
                        .WithMany()
                        .HasForeignKey("OrganizerMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BGC_DataAccess.Entities.GameTable", "Table")
                        .WithMany()
                        .HasForeignKey("TableGameTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizer");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.GameSessionGame", b =>
                {
                    b.HasOne("BGC_DataAccess.Entities.GameSession", "GameSession")
                        .WithMany()
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BGC_DataAccess.Entities.GameVersion", "GameVersion")
                        .WithMany()
                        .HasForeignKey("GameVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameSession");

                    b.Navigation("GameVersion");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.GameSessionRegistration", b =>
                {
                    b.HasOne("BGC_DataAccess.Entities.GameSession", "GameSession")
                        .WithMany()
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BGC_DataAccess.Entities.Member", "player")
                        .WithMany()
                        .HasForeignKey("playerMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameSession");

                    b.Navigation("player");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.GameVersion", b =>
                {
                    b.HasOne("BGC_DataAccess.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.RpgCampaign", b =>
                {
                    b.HasOne("BGC_DataAccess.Entities.Member", "Organizer")
                        .WithMany()
                        .HasForeignKey("OrganizerMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizer");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.RpgCampaignRegistration", b =>
                {
                    b.HasOne("BGC_DataAccess.Entities.RpgCampaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignRpgCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BGC_DataAccess.Entities.Member", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.RpgSession", b =>
                {
                    b.HasOne("BGC_DataAccess.Entities.RpgCampaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignRpgCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BGC_DataAccess.Entities.GameTable", "Table")
                        .WithMany()
                        .HasForeignKey("TableGameTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("BGC_DataAccess.Entities.RpgSessionGame", b =>
                {
                    b.HasOne("BGC_DataAccess.Entities.GameVersion", "GameVersion")
                        .WithMany()
                        .HasForeignKey("GameVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BGC_DataAccess.Entities.RpgSession", "RpgSession")
                        .WithMany()
                        .HasForeignKey("RpgSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameVersion");

                    b.Navigation("RpgSession");
                });
#pragma warning restore 612, 618
        }
    }
}
